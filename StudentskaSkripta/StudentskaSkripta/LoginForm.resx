<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QC6RXhpZgAATU0AKgAAAAgAAgESAAMAAAABAAEAAIdpAAQAAAAB
        AAAAJgAAAAAAAZKGAAcAAAB6AAAAOAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBq
        AHAAZQBnACAAdgAxAC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA4ADAAKQAs
        ACAAcQB1AGEAbABpAHQAeQAgAD0AIAA4ADUACv/bAEMABQMEBAQDBQQEBAUFBQYHDAgHBwcHDwsLCQwR
        DxISEQ8RERMWHBcTFBoVEREYIRgaHR0fHx8TFyIkIh4kHB4fHv/bAEMBBQUFBwYHDggIDh4UERQeHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHv/AABEIAHgAeAMBIgAC
        EQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0B
        AgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVG
        R0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3
        uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAA
        AAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGh
        scEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1
        dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri
        4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/APsuiiigAooooAKKKKACiiigAooooAKKKKACiiig
        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
        UUUUAFFFFABRRRQAUUUUAf/Z
</value>
  </data>
</root>